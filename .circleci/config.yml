version: 2
jobs:
  build:
    resource_class: small
    docker:
      - image: profiletechnology/cloud-tools
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Login to DockerHub
          command: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run:
          name: Build application Docker image
          command: build-image

  test:
    resource_class: medium
    docker:
      - image: circleci/node:12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Install yarn dependencies
          command: yarn
      - run:
          name: Run tests
          command: yarn test

  lint:
    resource_class: small
    docker:
      - image: circleci/node:12
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    working_directory: ~/repo
    steps:
      - checkout
      - run: 
          name: Install yarn dependencies
          command: yarn
      - run: npm run lint

  deploy: &deploy
    resource_class: small
    docker:
      - image: profiletechnology/cloud-tools
    working_directory: ~/repo
    steps:
      - checkout
      - deploy:
          name: Commit to infrastructure repository
          command: commit-to-infrastructure-repo

  deploy_develop:
    <<: *deploy

  deploy_staging:
    <<: *deploy

  deploy_production:
    <<: *deploy

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build:
          context: k8s-build
      - lint:
          context: k8s-build
      - test:
          context: k8s-non-production
      - deploy_develop:
          context: k8s-non-production
          requires:
            - test
            - lint
            - build
          filters:
            branches:
              only: develop
      - deploy_staging:
          context: k8s-staging
          requires:
            - test
            - lint
            - build
          filters:
            branches:
              only: staging
      - deploy_production:
          context: k8s-master
          requires:
            - test
            - lint
            - build
          filters:
            branches:
              only: main
